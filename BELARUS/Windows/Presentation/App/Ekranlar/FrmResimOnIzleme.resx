<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>